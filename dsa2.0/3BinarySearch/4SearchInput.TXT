Search insert position

Given a sorted array of nums consisting of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.


Examples:
Input: nums = [1, 3, 5, 6], target = 5
Output: 2
Explanation: The target value 5 is found at index 2 in the sorted array. Hence, the function returns 2.

Input: nums = [1, 3, 5, 6], target = 2
Output: 1
Explanation: The target value 2 is not found in the array. However, it should be inserted at index 1 to maintain the sorted order of the array.

let nums = [1, 3, 5, 6,10,12,44,65,122], target = 49


function targetElement(nums, target){
    for(let i = 0 ; i <= nums.length ; i++){
        if(nums[i] > target){
            return i;
        }
    }
    return nums.length;
}

console.log(targetElement(nums, target))


function searchInsert(nums, target) {
  let left = 0;
  let right = nums.length - 1;
  
  while (left <= right) {
    let mid = Math.floor((left + right) / 2);
    
    if (nums[mid] === target) {
      return mid; // Found target
    } else if (nums[mid] < target) {
      left = mid + 1; // Target is on the right
    } else {
      right = mid - 1; // Target is on the left
    }
  }
  
  // Left is the insertion position if not found
  return left;
}

console.log(searchInsert([1, 3, 5, 6], 2)); // Output: 1
