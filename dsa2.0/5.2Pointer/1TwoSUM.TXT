let numbers = [2,7,11,15]
let target = 9


brute force
var twoSum = function(numbers, target) {
    for (let i = 0; i < numbers.length; i++) {
        for (let j = i + 1; j < numbers.length; j++) {
            if (numbers[i] + numbers[j] === target) {
                return [i + 1, j + 1]; // 1-indexed
            }
        }
    }
    return [];
};
Time Complexity: O(nÂ²)
Space Complexity: O(1)

Optimal
function twoSum(numbers, target){
    let left = 0;
    let right = numbers.length - 1;
    
    while(left < right){
        let sum = numbers[left] + numbers[right];
        
        if(sum === target){
            return [left + 1, right + 1]
        }else if(sum < target){
            left = left + 1;
        }else{
            right = right - 1;
        }
    }
    return []
}

console.log(twoSum(numbers, target))

Time Complexity: O(n)

Space Complexity: O(1)